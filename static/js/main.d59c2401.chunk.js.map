{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardArray","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC1B,OACE,sBAAKC,UAAY,yCAAjB,UACA,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACnB,gCACA,6BAAKF,IACL,4BAAIC,WCWKK,EAhBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACXC,EAAYD,EAAOE,KAAI,SAACC,EAAKC,GACjC,OAAQ,cAAC,EAAD,CAERT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZM,EAAOI,GAAGT,OAMjB,OACE,8BACCM,KCCUI,EAbG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC9B,OACE,qBAAKX,UAAY,MAAjB,SACE,uBACAA,UAAW,mCACXY,KAAO,SACPC,YAAa,gBACbC,SAAYH,OCCHI,EARA,SAACC,GACd,OACE,qBAAKC,MAAS,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACCJ,EAAMK,YC4CIC,G,wDA1Cb,aAAgB,IAAD,8BACb,gBAgBFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAhB1C,EAAKC,MAAM,CACTxB,OAAQ,GACRM,YAAa,IAJF,E,qDAQf,WAAoB,IAAD,OACjBmB,MAAM,8CAA8CC,MAAK,SAAAC,GACvD,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJ,EAAKR,SAAS,CAACrB,OAAO6B,S,oBAQ1B,WAAU,IAAD,EACuBC,KAAKN,MAA5BxB,EADA,EACAA,OAAQM,EADR,EACQA,YACTyB,EAAiB/B,EAAOgC,QAAO,SAAAC,GACnC,OAAOA,EAAMxC,KAAKyC,cAAcC,SAAS7B,EAAY4B,kBAEvD,OAAKlC,EAAOoC,OAKR,sBAAKxC,UAAY,KAAjB,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUnB,OAAQ+B,SARf,6C,GA5BKM,cCMHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d59c2401.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n  return (\r\n    <div className = 'bg-light-green dib tc br3 pa3 ma2 grow'>\r\n    <img alt='robots' src={`https://robohash.org/${id}?size=200x200`}/>\r\n      <div>\r\n      <h2>{name}</h2>\r\n      <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n  const cardArray = robots.map((user,i) =>{\r\n    return (<Card\r\n    key={robots[i].id}\r\n    id={robots[i].id}\r\n    name={robots[i].name}\r\n    email={robots[i].email}/>\r\n    );\r\n  })\r\n  return (\r\n    <div>\r\n    {cardArray}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield,searchChange}) => {\r\n  return (\r\n    <div className = 'pa2'>\r\n      <input\r\n      className ='pa3 ba b--green bg-lightest-blue'\r\n      type = 'search'\r\n      placeholder ='search robots'\r\n      onChange = {searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style = {{overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n    {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state={\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users').then(response =>{\r\n      return response.json();\r\n    })\r\n    .then(users =>{\r\n      this.setState({robots:users})\r\n    })\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value })\r\n  }\r\n\r\n  render() {\r\n    const {robots, searchfield} = this.state;\r\n    const filteredRobots = robots.filter(robot =>{\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    })\r\n    if (!robots.length){\r\n      return <h1>Loading</h1>\r\n    }\r\n    else{\r\n      return (\r\n        <div className = 'tc'>\r\n        <h1 className='f1'>Robofriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange}/>\r\n        <Scroll>\r\n          <CardList robots={filteredRobots} />\r\n        </Scroll>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}